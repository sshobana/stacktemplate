{
"Parameters": {
        
        "LambdaSourceBucket": {
            "Description": "To specify the bucket that contain file",
            "Default": "testlambdaapi",
            "Type": "String"
        },
        "LambdaAuthorizer": {
            "Description": "to specify the zip file",
            "Default": "node.zip",
            "Type": "String"
        }
    },
"Resources" : {
"AuthLambdaRole": {
  "Type": "AWS::IAM::Role",
  "Properties": {
    "AssumeRolePolicyDocument": {
      "Version": "2012-10-17",
      "Statement": [{
        "Effect": "Allow",
        "Principal": {
          "Service": ["lambda.amazonaws.com"]
        },
        "Action": ["sts:AssumeRole"]
      }]
    },
    "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"],
    "Policies": [{
      "PolicyName": "dynamodb",
      "PolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [{
          "Sid": "1",
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem"
          ],
          "Resource": [
            {"Fn::Join" : ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/auth-token"]]}
          ]
        }]
      }
    }]
  }
},
"AuthLambda": {
  "Type": "AWS::Lambda::Function",
  "Properties": {
    "Code": {
      "S3Bucket": {
                    "Ref": "LambdaSourceBucket"
                },
                "S3Key": {
                    "Ref": "LambdaAuthorizer"
                }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {"Fn::GetAtt": ["AuthLambdaRole", "Arn"]},
    "Runtime": "nodejs6.10",
    "Timeout": 60
  }
},
"LambdaPermission": {
  "Type": "AWS::Lambda::Permission",
  "Properties": {
    "Action": "lambda:invokeFunction",
    "FunctionName": {"Fn::GetAtt": ["AuthLambda", "Arn"]},
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {"Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "API"}, "/*"]]}
  }
},
"API": {
  "Type": "AWS::ApiGateway::RestApi",
  "Properties": {
    "Name": "MYAPI"
  }
},

"Model": {
  "Type": "AWS::ApiGateway::Model",
  "Properties": {
    "ContentType": "application/json",
    "Name": "user",
    "RestApiId": {"Ref": "API"},
    "Schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "user",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": ["id", "name"]
    }
  }
},
"Resource": {
  "Type": "AWS::ApiGateway::Resource",
  "Properties": {
    "RestApiId": {"Ref": "API"},
    "ParentId": {"Fn::GetAtt": ["API", "RootResourceId"]},
    "PathPart": "user"
  }
},
"HttpMethod": {
  "Type": "AWS::ApiGateway::Method",
  "DependsOn": "LambdaPermission",
  "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {"Ref": "RestApiAuthorizer"},
    "RestApiId": {"Ref": "API"},
    "ResourceId": {"Ref": "Resource"},
    "HttpMethod": "POST",
    "Integration": {
      "Type": "AWS",
      "IntegrationHttpMethod": "POST",
      "Uri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["AuthLambda", "Arn"]}, "/invocations"]]},
      "IntegrationResponses": [{
        "StatusCode": 204
      }],
      "RequestTemplates": {
        "application/json": "{\"action\": \"put\", \"body\": $input.json('$')}"
      }
    },
    "RequestModels": {
      "application/json": {"Ref": "Model"}
    },
    "RequestParameters": {
      "method.request.header.Authorization": true
    },
    "MethodResponses": [{
      "ResponseModels": {
        "application/json": "Empty"
      },
      "StatusCode": 204
    }]
  }
},
"RestApiAuthorizerRole": {
  "Type": "AWS::IAM::Role",
  "Properties": {
    "AssumeRolePolicyDocument": {
      "Version": "2012-10-17",
      "Statement": [{
        "Effect": "Allow",
        "Principal": {
          "Service": ["apigateway.amazonaws.com"]
        },
        "Action": ["sts:AssumeRole"]
      }]
    },
    "Policies": [{
      "PolicyName": "lambda",
      "PolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [{
          "Effect": "Allow",
          "Action": "lambda:invokeFunction",
          "Resource": {"Fn::GetAtt": ["AuthLambda", "Arn"]}
        }]
      }
    }]
  }
},
"RestApiAuthorizer": {
  "Type": "AWS::ApiGateway::Authorizer",
  "Properties": {
    "AuthorizerCredentials": {"Fn::GetAtt": ["RestApiAuthorizerRole", "Arn"]},
    "AuthorizerResultTtlInSeconds": 300,
    "AuthorizerUri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["AuthLambda", "Arn"]}, "/invocations"]]},
    "IdentitySource": "method.request.header.Authorization",
    "IdentityValidationExpression": "^[a-zA-Z0-9]{3,32}$",
    "Name": "api-authorizer",
    "RestApiId": {"Ref": "API"},
    "Type": "TOKEN"
  }
}
}
}
